@page
@model IndexModel
@{
    ViewData["Title"] = "Unique IP Address List";
}

<h1>@ViewData["Title"]</h1>

<form method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="logFiles">Select Log Files:</label>
        <input type="file" class="form-control-file" id="logFiles" name="LogFiles" multiple>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@if (Model.IPAddresses != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Row Number</th>
                <th>IP Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ip in Model.IPAddresses)
            {
                <tr>
                    <td>@ip.Item1</td>
                    <td>@ip.Item2</td>
                </tr>
            }
        </tbody>
    </table>
}



using Microsoft.AspNetCore.Http;
using System.Collections.Generic;
using System.IO;

namespace YourNamespace.Pages
{
    public class IndexModel : PageModel
    {
        [BindProperty]
        public List<IFormFile> LogFiles { get; set; }

        public HashSet<string> UniqueIPAddresses { get; set; }

        public IActionResult OnGet()
        {
            return Page();
        }

        public IActionResult OnPost()
        {
            UniqueIPAddresses = new HashSet<string>();

            if (LogFiles != null && LogFiles.Count > 0)
            {
                foreach (var logFile in LogFiles)
                {
                    string filePath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", logFile.FileName);
                    using (var fileStream = new FileStream(filePath, FileMode.Create))
                    {
                        logFile.CopyTo(fileStream);
                    }
                    AddUniqueIPAddressesFromFile(filePath);
                }
            }
            return Page();
        }

        private void AddUniqueIPAddressesFromFile(string filePath)
        {
            try
            {
                var lines = System.IO.File.ReadAllLines(filePath);
                foreach (var line in lines)
                {
                    // Using regex to find all IP addresses in each line
                    var ipMatches = Regex.Matches(line, @"\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b");
                    foreach (Match match in ipMatches)
                    {
                        UniqueIPAddresses.Add(match.Value);
                    }
                }
            }
            catch (IOException ex)
            {
                // Handle file IO exception
                ModelState.AddModelError("", $"Error reading file: {ex.Message}");
            }
        }
    }
}

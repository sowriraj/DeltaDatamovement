import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class DataService {
  fetchData(url: string): Observable<any> {
    // Simulate a data fetch operation, you can replace this with an actual HTTP call
    const data = { content: 'Data from ' + url };
    return of(data);
  }
}


import { Directive, HostListener, Output, EventEmitter } from '@angular/core';
import { DataService } from './data.service';

@Directive({
  selector: '[appAnchorClick]'
})
export class AnchorClickDirective {
  @Output() dataFetched = new EventEmitter<any>();

  constructor(private dataService: DataService) {}

  @HostListener('click', ['$event'])
  onClick(event: Event): void {
    const target = event.target as HTMLElement;
    if (target && target.tagName === 'A') {
      event.preventDefault(); // Prevent the default anchor behavior
      const url = (target as HTMLAnchorElement).href;

      this.dataService.fetchData(url).subscribe(data => {
        this.dataFetched.emit(data); // Emit the fetched data
      });
    }
  }
}

import { Component } from '@angular/core';

@Component({
  selector: 'app-parent',
  templateUrl: './parent.component.html',
  styleUrls: ['./parent.component.css']
})
export class ParentComponent {
  fetchedData: any;

  onDataFetched(data: any) {
    this.fetchedData = data; // Bind the result to a property
  }
}


<!-- parent.component.html -->
<div appAnchorClick (dataFetched)="onDataFetched($event)">
  <p>Here are some links:</p>
  <a href="https://example.com/link1">Link 1</a>
  <a href="https://example.com/link2">Link 2</a>
  <a href="https://example.com/link3">Link 3</a>
</div>

<app-child [data]="fetchedData"></app-child>



import { Component, Input } from '@angular/core';

@Component({
  selector: 'app-child',
  template: `<div>{{ data?.content }}</div>`,
  styleUrls: ['./child.component.css']
})
export class ChildComponent {
  @Input() data: any;
}

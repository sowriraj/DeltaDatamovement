using System;
using System.Data;
using System.Data.SqlClient;
using Oracle.ManagedDataAccess.Client;

class Program
{
    static void Main()
    {
        string oracleConnectionString = "your Oracle connection string here";
        string sqlServerConnectionString = "your SQL Server connection string here";

        using (OracleConnection oracleConnection = new OracleConnection(oracleConnectionString))
        using (SqlConnection sqlConnection = new SqlConnection(sqlServerConnectionString))
        {
            oracleConnection.Open();
            sqlConnection.Open();

            // Merge delta data from Oracle to SQL Server
            MergeDeltaData(oracleConnection, sqlConnection);

            // Optionally, you can update a last synchronization timestamp or record the sync operation here.
        }
    }

    static void MergeDeltaData(OracleConnection oracleConnection, SqlConnection sqlConnection)
    {
        using (OracleCommand oracleCommand = new OracleCommand("SELECT * FROM YourOracleTable WHERE SomeCriteria", oracleConnection))
        using (OracleDataReader oracleReader = oracleCommand.ExecuteReader())
        {
            while (oracleReader.Read())
            {
                using (SqlCommand sqlCommand = new SqlCommand(@"
                    MERGE INTO YourSQLServerTable AS Target
                    USING (VALUES (@Value1, @Value2, ...)) AS Source (Column1, Column2, ...)
                    ON Target.PrimaryKeyColumn = Source.PrimaryKeyColumn
                    WHEN NOT MATCHED BY TARGET THEN
                        INSERT (Column1, Column2, ...)
                        VALUES (Source.Column1, Source.Column2, ...);", sqlConnection))
                {
                    sqlCommand.Parameters.Add("@Value1", SqlDbType.VarChar).Value = oracleReader["OracleColumn1"];
                    sqlCommand.Parameters.Add("@Value2", SqlDbType.VarChar).Value = oracleReader["OracleColumn2"];
                    // Add more parameters as needed.

                    sqlCommand.ExecuteNonQuery();
                }
            }
        }
    }
}
